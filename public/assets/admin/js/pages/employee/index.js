$(function() {    // crud table    if ($('#records').length) records.init();});records = {    init: function() {        $('#records').jtable({            title: 'Manage Employees',            paging: true //Enable paging                ,            messages: {                addNewRecord: 'Add new employee',                editRecord: 'Edit employee',                areYouSure: 'Are you sure?',            },            pageSize: 10 //Set page size (default: 10)                ,            sorting: true,            addRecordButton: $('#recordAdd'),            deleteConfirmation: function(data) {                data.deleteConfirmMessage = 'Are you sure to delete employee ' + data.record.first_name + ' ' + data.record.last_name + '?';            },            formCreated: function(event, data) {                data.form.find('select[name=roles]').attr('name', 'roles[]').attr('multiple', 'multiple');                reInitDesign(event, data);            },			recordsLoaded: function (event, data) {				if(!allow_action_group) $(".jtable-edit-command-button").parent().hide();				if(!allow_action_group) $(".jtable-delete-command-button").parent().hide();			},            recordDeleted: function(event, data) {                if (data.serverResponse.message) $(".success-alert").attr('data-message', success_alert(data.serverResponse.message)).trigger('click');            },            actions: {                listAction: employees,                createAction: employee_create,                updateAction: employee_update,                deleteAction: employee_delete            },            fields: {                id: {                    key: true,                    create: false,                    edit: false,                    list: false                },                first_name: {                    title: 'First Name',                    sorting: false,                    create: true,                    edit: true,                    list: true,                    type: 'text'                },                last_name: {                    title: 'Last Name',                    sorting: false,                    create: true,                    edit: true,                    list: true,                    type: 'text'                },                email: {                    title: 'Email',                    sorting: false,                    create: true,                    edit: true,                    list: true,                    type: 'text'                },                mobile: {                    title: 'Mobile(Optional)',                    sorting: false,                    create: true,                    edit: true,                    list: true,                    type: 'text'                },				is_email: {                    title: 'Invitation',                    sorting: false,                    create: false,                    edit: false,                    list: (allow_action_group ? true : false),                    type: 'text',					display: function(EmployeeInfo) {						return (EmployeeInfo.record.is_email == 1 ? "<i class='material-icons'>done</i>" : "<i class='material-icons'>clear</i>")					}                },				invitation: {                    title: '&nbsp;',                    width: '1%',                    paging: false,                    sorting: false,                    create: false,                    edit: false,                    list: (allow_action_group ? true : false),                    display: function(EmployeeInfo) {                        var $link = $('<a href="javascript:void(0)"><i class="material-icons">contact_mail</i></a>');						$link.click(function() {							UIkit.modal.confirm('Are you want to send invitation to this employee ?', function() {								altair_helpers.content_preloader_show();								$.post(employee_invitation, {									id: EmployeeInfo.record.id								}, function(result) {									$('#records').jtable('load');									$(".success-alert").attr('data-message', success_alert('Email send successfully.')).trigger('click');									altair_helpers.content_preloader_hide();								});							});						});						return $link;                    }                }            }        }).jtable('load');        $('.ui-dialog-buttonset').children('button').attr('class', '').addClass('md-btn md-btn-flat').off('mouseenter focus');        $('#AddRecordDialogSaveButton,#EditDialogSaveButton,#DeleteDialogButton').addClass('md-btn-flat-primary');        $('#search').click(function(e) {            e.preventDefault();            $('#records').jtable('load', {                name: $('[name=name]').val()            });        });		$('.send_invitation').click(function(e) {            e.preventDefault();			altair_helpers.content_preloader_show();            $.post(employee_invitations, null, function(result) {				$('#records').jtable('load');				$(".success-alert").attr('data-message', success_alert('Email send successfully.')).trigger('click');				altair_helpers.content_preloader_hide();			});        });		var excel_params = {    			allowed_types: "*.(xls|xlsx)",			route: employee_import,			selector: ".excel_upload"		}		bind_upload_image(excel_params);    }};